{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","useState","open","setOpen","input","setInput","Fragment","Modal","onClose","e","placeholder","todo","value","onChange","event","target","Button","onClick","collection","doc","id","set","merge","List","className","ListItem","ListItemText","secondary","primary","variant","Delete","delete","App","todos","setTodo","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","type","color","preventDefault","add","timestamp","FieldValue","serverTimestamp","task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAqBiBA,EAhBGC,IAASC,cAAc,CAEvCC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIKC,Y,gDCyBTC,MAjCf,SAAcC,GAAQ,IAAD,EACKC,oBAAS,GADd,mBACVC,EADU,KACJC,EADI,OAEMF,mBAAS,IAFf,mBAEVG,EAFU,KAEJC,EAFI,KASjB,OAAQ,eAAC,IAAMC,SAAP,WACJ,cAACC,EAAA,EAAD,CAAOL,KAAMA,EACNM,QAAS,SAAAC,GAAC,OAAEN,GAAQ,IAD3B,SAEE,gCACI,uCACA,uBAAOO,YAAaV,EAAMW,KAAKA,KAAMC,MAAOR,EAAOS,SAAU,SAAAC,GAAK,OAAET,EAASS,EAAMC,OAAOH,UAC1F,cAACI,EAAA,EAAD,CAAQC,QAZD,WACV9B,EAAG+B,WAAW,SAASC,IAAInB,EAAMW,KAAKS,IAAIC,IAAI,CAC1CV,KAAKP,GACP,CAACkB,OAAM,IACTnB,GAAQ,IAQL,8BAGN,eAACoB,EAAA,EAAD,CAAMC,UAAU,aAAhB,UAEI,cAACC,EAAA,EAAD,UACK,cAACC,EAAA,EAAD,CAAeC,UAAU,GAAGC,QAAS5B,EAAMW,KAAKA,SAGrD,uBACA,cAACK,EAAA,EAAD,CAAQC,QAAS,SAAAR,GAAC,OAAEN,GAAQ,IAAO0B,QAAQ,YAA3C,kBACA,cAACC,EAAA,EAAD,CAAQb,QAAS,SAAAH,GAAQ3B,EAAG+B,WAAW,SAASC,IAAInB,EAAMW,KAAKS,IAAIW,mBCyBhEC,MAtDf,WAAgB,IAAD,EACO/B,mBAAS,IADhB,mBACTgC,EADS,KACHC,EADG,OAEQjC,mBAAS,IAFjB,mBAETG,EAFS,KAEFC,EAFE,KAsBb,OAlBF8B,qBAAU,WAGRhD,EAAG+B,WAAW,SAASkB,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DJ,EAAQI,EAASC,KAAKC,KAAI,SAAArB,GAAG,MAAG,CAACC,GAAGD,EAAIC,GAAGT,KAAKQ,EAAIsB,OAAO9B,eAG7D,IAYE,sBAAKa,UAAU,MAAf,UAEJ,uBAAMA,UAAU,OAAhB,UACE,kDACF,eAACkB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACC,EAAA,EAAD,CAAOhC,MAAOR,EAAOS,SAAU,SAAAJ,GAAIJ,EAASI,EAAEM,OAAOH,aAQ9C,cAACI,EAAA,EAAD,CAAQ6B,UAAWzC,EAAO0C,KAAK,SAASjB,QAAQ,YAAYkB,MAAM,UAAU9B,QAxBvE,SAACR,GACLA,EAAEuC,iBACF7D,EAAG+B,WAAW,SAAS+B,IAAI,CAACtC,KAAKP,EACjC8C,UAAU9D,IAASU,UAAUqD,WAAWC,oBAGzC/C,EAAS,KAkBT,yBAIJ,+BACG,2CACA4B,EAAMO,KAAI,SAACa,GACV,OAAO,cAAC,EAAD,CAAM1C,KAAM0C,cCvCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0384d72d.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n\r\n  import firebase from \"firebase\";\r\n\r\n  const firebaseApp=firebase.initializeApp({\r\n\r\n    apiKey: \"AIzaSyDAh5P7bwwqD-9CbLtU_0h14J7XLu1QE_Q\",\r\n    authDomain: \"todo-app-react-95130.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-react-95130.firebaseio.com\",\r\n    projectId: \"todo-app-react-95130\",\r\n    storageBucket: \"todo-app-react-95130.appspot.com\",\r\n    messagingSenderId: \"670096958572\",\r\n    appId: \"1:670096958572:web:625031cda500f88cc5a449\",\r\n    measurementId: \"G-84RJCEHXDT\"\r\n\r\n  })\r\n\r\n  const db =firebaseApp.firestore();\r\n  \r\n\r\n  export default db;","// rfce cntr +space\r\nimport React,{useState} from 'react'\r\nimport db from './firebase'\r\nimport './Todo.css'\r\nimport { List,ListItem,ListItemText,Modal,Button } from '@material-ui/core';\r\n//import {DeleteForeverIcon} from '@material-ui/icons'\r\n import {Delete} from '@material-ui/icons'\r\n\r\n\r\n\r\nfunction Todo(props) {\r\n    const [open ,setOpen]=useState(false);\r\n    const [input,setInput]=useState('');\r\n    const updateTodo=()=>{\r\n           db.collection('todos').doc(props.todo.id).set({\r\n               todo:input\r\n           },{merge:true});\r\n           setOpen(false);\r\n    }\r\n    return (<React.Fragment>\r\n        <Modal open={open}//state tells if modal is open\r\n               onClose={e=>setOpen(false)}>{/*This is function*/ }\r\n          <div >\r\n              <h1>Modal</h1>\r\n              <input placeholder={props.todo.todo} value={input} onChange={event=>setInput(event.target.value)}/>\r\n              <Button onClick={updateTodo}>Update Todo</Button>{/*Bpdy of modal*/ }\r\n          </div>\r\n        </Modal>\r\n        <List className=\"todo__list\">\r\n            \r\n            <ListItem>\r\n                 <ListItemText  secondary=\"\" primary={props.todo.todo}/>\r\n                 \r\n            </ListItem>\r\n            <hr/>\r\n            <Button onClick={e=>setOpen(true)} variant=\"contained\">Edit</Button>\r\n            <Delete onClick={event=>{db.collection('todos').doc(props.todo.id).delete()}}/>\r\n \r\n        </List>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React,{useState,useEffect} from 'react'\nimport './App.css';\nimport { Button,FormControl,Input,InputLabel } from '@material-ui/core';\nimport Todo from './Todo';\nimport db from './firebase'\nimport firebase from 'firebase'\n\nfunction App() {\nconst[todos,setTodo]= useState([]);\nconst[input ,setInput]=useState('')\n\nuseEffect(() => {\n  //snapshot.docs.map(doc=>{doc.data()}) returns an array of object\n  //snapshot.docs.map(doc=>{doc.data().todo}) return array of strings where todo is a key\n  db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n    setTodo(snapshot.docs.map(doc=>({id:doc.id,todo:doc.data().todo})))\n  })//Every single time database chages fetch\n  \n},[])\n\nconst addTodo=(e)=>{\n          e.preventDefault();\n          db.collection('todos').add({todo:input,\n          timestamp:firebase.firestore.FieldValue.serverTimestamp()//Timestamp of firebase server\n        }) // add to collection todos in firebase\n         //setTodo([...todos,input]);\n         setInput('');\n}\n\n  return (\n    <div className=\"App\">\n\n<form className=\"form\">\n  <h2>Write Your To-Do</h2>\n<FormControl>\n  <InputLabel >Write a Todo</InputLabel>\n  <Input value={input} onChange={e=>{setInput(e.target.value)}} />\n  \n</FormControl>\n      \n      {/* Form on submission refreshes the page so state is lost ,\n      to prevent it e.preventDEafult() is used to prevent refreshing*/}\n         \n         {/* disabled={!input}   disable a button nif input is blank*/ }\n         <Button disabled={!input} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={addTodo}>Add todo</Button>\n      </form>\n     \n\n     <ul >\n        <h4>Your_List</h4>\n       {todos.map((task)=>{\n         return(<Todo todo={task}/>)\n       })}\n       \n       \n     </ul>\n   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}